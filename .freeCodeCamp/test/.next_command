builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
[[ "$(uname -s)" =~ ^CYGWIN*|MINGW*|MSYS* ]]
[[ "$HISTCONTROL" =~ .. ]]
__vsc_history_verify=1
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
echo hello bash
touch questionnaire.sh
echo hello questionnaire
sh questionnaire.sh
bash questionnaire.sh
which bash
./questionnaire.sh
ls --color=auto -l
chmod +x questionnaire.sh
__vsc_prompt_cmd_original
ls --color=auto -l
./questionnaire.sh
ls --color=auto -l
./questionnaire.sh
./questionnaire.sh
./questionnaire.sh
./questionnaire.sh
./questionnaire.sh
echo --help
man echo
./questionnaire.sh
./questionnaire.sh
./questionnaire.sh
./questionnaire.sh
./questionnaire.sh
s
as
touch countdown.sh
chmod +x countdown.sh
rm a.out
./countdown.sh
./countdown.sh arg1 arg2 arg3
./countdown.sh arg1 arg2 arg3
help
man echo
man if
help if
./countdown.sh arg1
__vsc_prompt_cmd_original
./countdown.sh anything
./countdown.sh anythi
./countdown.sh 4
./countdown.sh 5
help
help if
help if
man if
help if
help [[
help
help test
./countdown.sh 5
./countdown.sh [[4 -le 5 ]]
./countdown.sh [[ 4 -le 5 ]]
[[ 4 -le 5 ]]
echo $?
[[ 4 -ge 5 ]]
echo [[ 4 -ge 5 ]]
echo
echo $?
[[ 4 -ge 5 ]]
echo $?
[[ 4 -ge 5 ]]
[[ 4 -ne 5 ]]
[[ 10 -ne 5 ]]
__vsc_prompt_cmd_original
bad_command
bad_command
ls --color=auto
ls --color=auto -y
__vsc_prompt_cmd_original
help test
[[ -a countdown.sh ]]
bad_file.txt
[[ -a bad_file.txt ]]
[[ -a countdown.sh ]]
ls --color=auto -l
help test
chmod +x countdown.sh
chmod -x countdown.sh
chmod +x countdown.sh
[[ -x countdown.sh ]]
help [[
[[ -x countdown.sh && 5 -le 4 ]]
[[ -x countdown.sh || 5 -le 4 ]]
./countfoen.sh 1
./countdown.sh 1
./countdown.sh -1
help [[
help if
help test
help
./countdown.sh 10
help
ls --color=auto /
ls --color=auto /bin
man sleep
sleep 3
./countdown.sh 3
./countdown.sh 3
./countdown.sh 1
help while
./countdown.sh 5
touch bingo.sh
chmod +x bingo.sh
./bingo.sh
__vsc_prompt_cmd_original
printenv
echo LANG
echo $LANG
declare -p
echo $RANDOM
./bing.sh
./bingo.sh
./bingo.sh
./bingo.sh
__vsc_prompt_cmd_original
I=0
echo
echo $I
((I++))
echo $I
help let
((I+=10))
echo I
echo I
echo $I
$((I+4))
echo $((I+4))
echo $I
$((J=I-6))
J=$((I-6))
echo J
echo J
echo $J
echo J*5+25
echo $J
J=$((J*5+25))
__vsc_prompt_cmd_original
echo $((J*5+25))
echo $J
declare -p
declare -p J
declare -p RANDOM
__vsc_prompt_cmd_original
echo RANDOM%75
echo RANDOM % 75
echo $((RANDOM % 75))
echo $((RANDOM % 75 + 1))
